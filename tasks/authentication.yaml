---
- name: Get vault token via userpass
  block:
    - name: API request vault auth token via userpass
      ansible.builtin.uri:
        return_content: yes
        validate_certs: false
        url: "{{ vault_url }}/v1/auth/userpass/login/{{ vault_username }}"
        method: PUT
        body_format: json
        body:
          password: "{{ vault_password }}"
        headers:
          X-Vault-Request: true
          X-Vault-Namespace: "{{ vault_namespace | default(omit) }}"
      register: vault_api_data_token_userpass
      delegate_to: "{{ vault_api_executor }}"

    - name: Save requested vault api token to vars
      ansible.builtin.set_fact:
        vault_token: "{{ vault_api_data_token_userpass.json.auth.client_token }}"
  when:
    - vault_username is defined
    - vault_password is defined

- name: Get vault token via approle
  block:
    - name: API request vault auth token via approle
      ansible.builtin.uri:
        return_content: yes
        validate_certs: false
        url: "{{ vault_url }}/v1/auth/approle/login"
        method: POST
        body_format: json
        body:
          role_id: "{{ vault_role_id }}"
          secret_id: "{{ vault_secret_id }}"
        headers:
          X-Vault-Request: true
          X-Vault-Namespace: "{{ vault_namespace | default(omit) }}"
      register: vault_api_data_token_approle

    - name: Save requested vault api token to vars
      ansible.builtin.set_fact:
        vault_token: "{{ vault_api_data_token_approle.json.auth.client_token }}"
  when:
    - vault_role_id is defined
    - vault_secret_id is defined
