---
- name: Load vault server podman-profile
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - 'vault-server.yaml'
      paths:
        - 'vars'

- name: "Request and sign certificate for: {{ vault_url }} (vault webinterface)"
  ansible.builtin.uri:
    return_content: yes
    validate_certs: false
    url: "{{ vault_url }}/v1/{{ vault_ca_path }}/issue/{{ vault_ca_cert_role_name }}"
    method: PUT
    status_code: 200
    body_format: json
    body:
      common_name: "{{ ansible_fqdn }}"
      ttl: "{{ vault_gen_vault_cert_ttl }}"
      ip_sans: "{{ ansible_default_ipv4.address }}"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
  register: vault_generated_cert_vault
  delegate_to: "{{ vault_api_executor }}"

- name: "Installing public key to {{ mounts.certs.host }}{{ cert_crt_name }}"
  ansible.builtin.copy:
    content: "{{ vault_generated_cert_vault.json.data.certificate }}"
    dest: "{{ mounts.certs.host }}{{ cert_crt_name }}"

- name: "Installing private key to {{ mounts.certs.host }}{{ cert_key_name }}"
  ansible.builtin.copy:
    content: "{{ vault_generated_cert_vault.json.data.private_key }}"
    dest: "{{ mounts.certs.host }}{{ cert_key_name }}"

- name: Restart vault container to apply new certificate
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: restarted

- name: "Wait for webservice {{ vault_url }} come up"
  ansible.builtin.uri:
    validate_certs: false
    url: "{{ vault_url }}"
    status_code: 200
  register: vault_api_data_website_status
  until: vault_api_data_website_status.status == 200
  retries: 60
  delay: 1
  delegate_to: "{{ vault_api_executor }}"
  when: vault_unseal is defined

- name: Make initial vault unsealing
  ansible.builtin.uri:
    validate_certs: false
    url: "{{ vault_url }}/v1/sys/unseal"
    method: PUT
    status_code: 200
    body_format: json
    body:
      key: "{{ vault_unseal }}"
      reset: false
      migrate: false
  register: vault_api_data_init
  delegate_to: "{{ vault_api_executor }}"
  when: vault_unseal is defined