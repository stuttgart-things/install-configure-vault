---
- name: Load vault server podman-profile
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - 'vault-server.yaml'
      paths:
        - 'vars'

- name: "Request and sign certificate for: {{ vault_url }} (vault webinterface)"
  ansible.builtin.uri:
    return_content: yes
    validate_certs: false
    url: "{{ vault_url }}/v1/{{ vault_ca_path }}/issue/{{ vault_ca_cert_role_name }}"
    method: PUT
    status_code: 200
    body_format: json
    body:
      common_name: "{{ ansible_fqdn }}"
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ vault_token }}"
  register: vault_generated_cert_vault
  delegate_to: localhost

- name: "Installing public key to {{ mounts.certs.host }}{{ cert_crt_name }}"
  ansible.builtin.copy:
    content: "{{ vault_generated_cert_vault.json.data.certificate }}"
    dest: "{{ mounts.certs.host }}{{ cert_crt_name }}"

- name: "Installing private key to {{ mounts.certs.host }}{{ cert_key_name }}"
  ansible.builtin.copy:
    content: "{{ vault_generated_cert_vault.json.data.private_key }}"
    dest: "{{ mounts.certs.host }}{{ cert_key_name }}"

- name: Restart podman container to apply new cert
  ansible.builtin.command: "podman restart {{ container_name }}"